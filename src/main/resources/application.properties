quarkus.log.level=INFO
quarkus.security.auth.enabled-in-dev-mode=false

quarkus.http.auth.permission.authenticated.paths=/jepdy/secure/*
quarkus.http.auth.permission.authenticated.policy=authenticated
quarkus.http.auth.permission.public.paths=/q/dev/*,/jepdy/public/*,/callback/*,/,/jepdy/secure/*
quarkus.http.auth.permission.public.policy=permit

quarkus.oidc.application-type=web-app
quarkus.oidc.authentication.user-info-required=true
quarkus.oidc.authentication.redirect-path=/callback/github
quarkus.oidc.provider=github
quarkus.oidc.client-id=5f537bee311cc7446cf6
quarkus.oidc.credentials.secret=89425ea344279a3bf23a0f6d438c82ef4fb00ec0
quarkus.oidc.authentication.error-path=/
quarkus.oidc.authentication.restore-path-after-redirect=true
%prod.quarkus.oidc.auth-server-url=http://keycloak-anasandbox-stage.apps.sandbox-m2.ll9k.p1.openshiftapps.com

# configure your datasource
quarkus.datasource.db-kind = postgresql
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
%prod.quarkus.datasource.username = ${database-user}
%prod.quarkus.datasource.password = ${database-password}
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://postgresql:5432/${database-name:postgresql}

quarkus.mongodb.database = ${database-name:javajepdy}
%prod.quarkus.mongodb.connection-string = mongodb://${database-user}:${database-password}@mongodb:27017/${database-name}?retryWrites=false

quarkus.kubernetes.env.secrets=mongodb,postgresql
quarkus.kubernetes.pvc-volumes.my-volume.claim-name=data
quarkus.kubernetes.pvc-volumes.my-volume.readonly=false
quarkus.kubernetes.ingress.expose=true
%prod.quarkus.kubernetes.mounts.my-volume.path=/data

quarkus.container-image.registry=quay.io
quarkus.container-image.group=anasandbox
quarkus.container-image.tag=1.0.0